@using Falcon.Web.Mvc.HtmlExtensions
@model Phoenix.Server.Web.Areas.Admin.Models.Product.ProductModel
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)
<div class="grid grid-cols-12 gap-6 mt-5">
    <div class="intro-y col-span-12 lg:col-span-6">
        <div class="intro-y box p-5">

            <div>
                <label>Loại sản phẩm</label>
                @*@Html.DropDownList("ProductType_Id", null, new { @class = "form-control input w-full border mt-2" })*@
                <select id="selectProductType" name="ProductType_Id" class="tom-select"></select>
                <script>
                    var zsettings = {
                        valueField: 'Id',
                        labelField: 'Name',
                        searchField: 'Name',
                        placeholder: '-- Vui lòng chọn nhóm --',
                        load: function (query, callback) {
                            var url = '/api/dropdown/TakeAllProductTypes';
                            fetch(url, { method: "post" })
                                .then(response => response.json())
                                .then(json => {
                                    callback(json);
                                }).catch(() => {
                                    callback();
                                });

                        },
                        render: {
                            option: function (item, escape) {
                                return `<option value="${item.Id}"> ${item.Name} </option>`;
                            },
                            item: function (item, escape) {
                                return `<option value="${item.Id}"> ${item.Name} </option>`;
                            }
                        }
                    };
                    new TomSelect('#selectProductType', zsettings);
                </script>
            </div>

            @*<div>*@
            @*<label>Hãng sản xuất</label>*@
            @*@Html.DropDownList("ProductType_Id", null, new { @class = "form-control input w-full border mt-2" })*@
            @*<select id="selectVendor" name="Vendor_Id" class="tom-select"></select>*@
            @* <script>
            var zsettings = {
                valueField: 'Id',
                labelField: 'Name',
                searchField: 'Name',
                placeholder: '-- Vui lòng chọn nhóm --',
                load: function (query, callback) {
                    var url = '/api/dropdown/TakeAllVendors';
                    fetch(url, { method: "post" })
                        .then(response => response.json())
                        .then(json => {
                            callback(json);
                        }).catch(() => {
                            callback();
                        });

                },
                render: {
                    option: function (item, escape) {
                        return `<option value="${item.Id}"> ${item.Name} </option>`;
                    },
                    item: function (item, escape) {
                        return `<option value="${item.Id}"> ${item.Name} </option>`;
                    }
                }
            };
            new TomSelect('#selectVendor', zsettings);

            $('#selectVendor').TomSelect({
                TomSelect.setValue(@Model.Vendor_Id);
            });
        </script>*@
            @*</div>*@


            @*<div>
                <label>Hang San Xuat</label>
                <input type="text" id="VendorId" name="VendorId" class="form-control" value="@Model.Vendor_Id" />
            </div>*@

            <label for="VendorId" class="col-sm-2 col-form-label">Hang San Xuat</label>
            <div class="col-sm-4">
                @*@Html.FalconEditorFor(model => model.LocationCode)*@
                <input type="text" id="VendorId" name="VendorId" class="form-control" value="@Model.Vendor_Id" />
            </div>

            <div>
                <label>Tên sản phẩm</label>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input w-full border mt-2" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div>
                <label>Model Code</label>
                @Html.EditorFor(model => model.ModelCode, new { htmlAttributes = new { @class = "form-control input w-full border mt-2" } })
                @Html.ValidationMessageFor(model => model.ModelCode)
            </div>

            @if (@Model.Id > 0)
            {
                <div>
                    <label>Hình ảnh</label>
                    <input type="file" name="Image" value="" class="form-control" />
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $("#VendorId").kendoComboBox({
            dataTextField: "Name",
            dataValueField: "Id",
            placeholder: "--Chọn cửa hàng--",
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("List", "Vendor"))",
                        type: "POST",
                        dataType: "json"
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                },
            }
        });
        $("#VendorId").closest('.k-combobox').addClass('w-100 form-control');
    </script>
}
